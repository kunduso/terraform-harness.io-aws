pipeline:
  name: terraform-harness-aws
  identifier: terraformharnessaws
  projectIdentifier: app01
  orgIdentifier: default
  tags: {}
  properties:
    ci:
        codebase:
            connectorRef: kundusogithub
            repoName: terraform-harness.io-aws
            build: <+input>
  stages:
    - stage:
        name: Build
        identifier: Build
        type: CI
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: MarkAsFailure
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: Set AWS Credentials
                  identifier: aws_credentials
                  spec:
                    shell: Sh
                    command: |-
                      export AWS_ACCESS_KEY_ID=<+secrets.getValue("AWSAccessKey")>
                      export AWS_SECRET_ACCESS_KEY=<+secrets.getValue("AWSSecretKey")>
                      export AWS_DEFAULT_REGION=<+secrets.getValue("AWSRegion")>
              - step:
                  type: Run
                  name: Install Terragrunt
                  identifier: terragrunt_install
                  spec:
                    shell: Sh
                    command: |-
                      sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.38.4/terragrunt_linux_amd64"
                      sudo chmod +x /bin/terragrunt
                      terragrunt -v
              - step:
                  type: Run
                  name: Terragrunt Plan
                  identifier: terragrunt_plan
                  spec:
                    shell: Sh
                    command: |-
                      cd environments/AccountA
                      aws sts get-caller-identity
                      terragrunt plan --terragrunt-non-interactive --terragrunt-iam-role "arn:aws:iam::<+secrets.getValue("devawsaccountnumber")>:role/terragrunt-role"
              - step:
                  type: Run
                  name: Check files in root
                  identifier: check_files
                  spec:
                    shell: Sh
                    command: |-
                      pwd
                      ls
                      # echo <+trigger.branch>
                      # export AWS_ACCESS_KEY_ID=<+secrets.getValue("AWSSecretKey")>
                      # export AWS_SECRET_ACCESS_KEY=<+secrets.getValue("AWSAccessKey")>
                      # export AWS_DEFAULT_REGION=<+secrets.getValue("AWSRegion")>
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
